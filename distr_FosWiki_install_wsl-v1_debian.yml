---
- name: Ansible script for Debian 11+, Install and configrure FosWiki (fom git, on separate disk).
  hosts: "{{ variable_host | default('localhost') }}"
  become_user: '{{ name_of_user }}'
  become_method: 'sudo'
  
  
  vars:
# Main configure vars
    web_server_name: 'apache2'
    user_name_webserver: 'www-data'
    main_patch_to_fowiki: '/mnt/d/foswiki'
    path_to_foswiki_engine: '/foswiki-engine'
    path_to_foswiki_database: '/foswiki-database'
    path_to_foswiki_webserver_config_file: '/etc/apache2/sites-available/foswiki.httpd.conf'
    

# tech vars
    list_soft:
      - '{{web_server_name}}'
      - git-all
      - perl
      - libcgi-session-perl
      - libcrypt-passwdmd5-perl
      - libfile-copy-recursive-perl
      - libapache2-mod-perl2
      - libapache2-request-perl
      - libdbi-perl
      - libdbd-mysql-perl
      - libdbd-pg-perl
      - libdbd-sqlite3-perl
      - libfcgi-perl
      - libfcgi-procmanager-perl
      - libcrypt-smime-perl
      - libcrypt-x509-perl
      - libconvert-pem-perl
      - libalgorithm-diff-perl
      - libarchive-tar-perl
      - libauthen-sasl-perl
      - libcgi-pm-perl
      - libdigest-sha-perl
      - libemail-address-xs-perl
      - libemail-mime-perl
      - libencode-perl
      - liberror-perl
      - libhtml-parser-perl
      - libhtml-tree-perl
      - libio-socket-ip-perl
      - libio-socket-ssl-perl
      - libjson-perl
      - liblocale-codes-perl
      - liblocale-maketext-perl
      - liblocale-maketext-lexicon-perl
      - liblocale-msgfmt-perl
      - libwww-perl
      - liblwp-protocol-https-perl
      - liburi-perl
      - libversion-perl
      - python3-apt

    list_apache_module:
      - mod_rewrite
      - rewrite
      - cgi
      - access_compat



  vars_prompt:
    - name: name_of_user
      prompt: "Please enter the name of user, for which we are making settings (default root) \n"
      private: no
      default: root

  tasks:
    - name: 'install web server and other soft'
      apt:
        update_cache: yes
        pkg: '{{ list_soft }}'
        state: present
      become: yes


    - name: 'Prepare folder to put FosWiki Engine path = {{main_patch_to_fowiki}}{{path_to_foswiki_engine}}'
      ansible.builtin.file:
        path: '{{main_patch_to_fowiki}}{{path_to_foswiki_engine}}'
        owner: '{{user_name_webserver}}'
        group: '{{user_name_webserver}}'
        mode: u+rwx,g+rwx,o+rwx
        state: directory
      become: yes

    - name: 'Prepare folder to put FosWiki Database {{main_patch_to_fowiki}}{{path_to_foswiki_database}}'
      ansible.builtin.file:
        path: '{{main_patch_to_fowiki}}{{path_to_foswiki_database}}'
        owner: '{{user_name_webserver}}'
        group: '{{user_name_webserver}}'
        mode: u+rwx,g+rwx,o+rwx
        state: directory
      become: yes

    - name: 'Download FosWiki engine from git'
      ansible.builtin.git:
        repo: 'https://github.com/foswiki/distro.git'
        dest: '{{main_patch_to_fowiki}}{{path_to_foswiki_engine}}'
#        single_branch: yes   #this parametr work in 2.11 and later version of ansible only
        version: master
        force: yes

    - name: 'Config access right on file FosWiki Engine - give acces for {{user_name_webserver}} user'
      ansible.builtin.file:
        path: '{{main_patch_to_fowiki}}{{path_to_foswiki_engine}}'
        owner: '{{user_name_webserver}}'
        group: '{{user_name_webserver}}'
#        mode: u+rwx,g+rx,o+rx
        recurse: yes
        state: directory
      become: yes



    - name: Make config for Apache - to run FosWiki site
      ansible.builtin.blockinfile:
        path: '{{path_to_foswiki_webserver_config_file}}'
        mode: a+r
        create: yes
        block: |
            # Autogenerated httpd.conf file for Foswiki.
            # Generated at https://foswiki.org/Support/ApacheConfigGenerator?vhost=;port=;dir={{main_patch_to_fowiki}}{{path_to_foswiki_engine}};symlink=on;pathurl=/;shorterurls=disabled;engine=CGI;fastcgimodule=fastcgi;fcgidreqlen=;apver=2;confighost=;configip=;configuser=;loginmanager=Template;htpath=;errordocument=UserRegistration;errorcustom=;disablephp=on;blockpubhtml=on;blocktrashpub=;controlattach=;blockspiders=;foswikiversion=2.x;apacheversion=2.4;timeout=;ssl=;sslcert=/etc/ssl/apache2/yourservercert.pem;sslchain=/etc/ssl/apache2/sub.class1.server.ca.pem;sslkey=/etc/ssl/apache2/yourservercertkey.pem

            # Configuration generated for Foswiki 2.x,  Apache 2.4

            Define foswikiroot "{{main_patch_to_fowiki}}{{path_to_foswiki_engine}}/core"

            # The Alias defines a url that points to the root of the Foswiki installation.
            # The first parameter will be part of the URL to your installation e.g.
            # http://my.co.uk/foswiki/bin/view/...
            # The second parameter must point to the physical path on your disc.

            ScriptAlias /bin "${foswikiroot}/bin"

            # The following Alias is used to access files in the pub directory (attachments etc)
            # It must come _after_ the ScriptAlias.
            # If short URLs are enabled, and any other local directories or files need to be accessed directly, they
            # must also be specified in an Alias statement, and must not conflict with a web name.

            Alias /pub "${foswikiroot}/pub"

            Alias / "${foswikiroot}/"

            # Block access to typical spam related attachments
            # Except the Foswiki directory which is read only and does have attached html files.
            SetEnvIf Request_URI "/pub/.*\.[hH][tT][mM][lL]?$" blockAccess
            SetEnvIf Request_URI "/pub/System/.*\.[hH][tT][mM][lL]?$" !blockAccess

            # This enables access to the documents in the Foswiki root directory

            <Directory "${foswikiroot}">
                <RequireAll>
                    Require all granted
                    Require not env blockAccess
                </RequireAll>
            </Directory>

            # This specifies the options on the Foswiki scripts directory. The ExecCGI
            # and SetHandler tell apache that it contains scripts. "Allow from all"
            # lets any IP address access this URL.
            # Note:  If you use SELinux, you also have to "Allow httpd cgi support" in your SELinux policies

            <Directory "${foswikiroot}/bin">
                AllowOverride None

                <RequireAll>
                    Require all granted
                    Require not env blockAccess
                </RequireAll>

                Options +ExecCGI  +FollowSymLinks
                SetHandler cgi-script

                # Password file for Foswiki users
                AuthUserFile "${foswikiroot}/data/.htpasswd"
                AuthName 'Enter your WikiName: (First name and last name, no space, no dots, capitalized, e.g. JohnSmith). Cancel to register if you do not have one.'
                AuthType Basic

                # File to return on access control error (e.g. wrong password)
                ErrorDocument 401 /bin/view/System/UserRegistration

            </Directory>

            # This sets the options on the pub directory, which contains attachments and
            # other files like CSS stylesheets and icons. AllowOverride None stops a
            # user installing a .htaccess file that overrides these options.
            # Note that files in pub are *not* protected by Foswiki Access Controls,
            # so if you want to control access to files attached to topics you need to
            # block access to the specific directories same way as the ApacheConfigGenerator
            # blocks access to the pub directory of the Trash web
            <Directory "${foswikiroot}/pub">
                Options None
                Options +FollowSymLinks
                AllowOverride None

                <RequireAll>
                    Require all granted
                    Require not env blockAccess
                </RequireAll>
                ErrorDocument 404 /bin/viewfile

            # If you have PHP installed as Apache module, one of the below directives will ensure
            # that it is disabled.   The "ifmodule" statements should prevent this from causing
            # errors if php is not installed.

                <ifmodule mod_php3.c>
                    php3_engine off
                </ifmodule>
                <ifmodule mod_php4.c>
                    php_admin_flag engine off
                </ifmodule>
                <ifmodule mod_php5.c>
                    php_admin_flag engine off
                </ifmodule>

            # This line will redefine the mime type for the most common types of scripts
                AddType text/plain .shtml .php .php3 .phtml .phtm .pl .py .cgi

            # add an Expires header that is sufficiently in the future that the browser does not even ask if its uptodate
            # reducing the load on the server significantly
            # IF you can, you should enable this - it _will_ improve your Foswiki experience, even if you set it to under one day.
            # you may need to enable expires_module in your main apache config

            #<ifmodule mod_expires.c>
            #  <filesmatch "\.(jpe?g|gif|png|css(\.gz)?|js(\.gz)?|ico)$">
            #       ExpiresActive on
            #       ExpiresDefault "access plus 11 days"
            #   </filesmatch>
            #</ifmodule>
            #
            # Serve pre-compressed versions of .js and .css files, if they exist
            # Some browsers do not handle this correctly, which is why it is disabled by default
            # <FilesMatch "\.(js|css)$">
            #         RewriteCond %{HTTP:Accept-encoding} gzip
            #         RewriteCond %{REQUEST_FILENAME}.gz -f
            #         RewriteRule ^(.*)$ %{REQUEST_URI}.gz [L,QSA]
            # </FilesMatch>
            # <FilesMatch "\.(js|css)\?.*$">
            #         RewriteCond %{HTTP:Accept-encoding} gzip
            #         RewriteCond %{REQUEST_FILENAME}.gz -f
            #         RewriteRule ^([^?]*)\?(.*)$ $1.gz?$2 [L]
            # </FilesMatch>
            # <FilesMatch "\.js\.gz(\?.*)?$">
            #         AddEncoding x-gzip .gz
            #         AddType application/x-javascript .gz
            # </FilesMatch>
            # <FilesMatch "\.css\.gz(\?.*)?$">
            #         AddEncoding x-gzip .gz
            #         AddType text/css .gz
            # </FilesMatch>

            </Directory>

            # Security note: All other directories should be set so
            # that they are *not* visible as URLs, so we set them as =deny from all=.
            <Directory "${foswikiroot}/data">
                Require all denied
            </Directory>

            <Directory "${foswikiroot}/templates">
                Require all denied
            </Directory>

            <Directory "${foswikiroot}/lib">
                Require all denied
            </Directory>

            <Directory "${foswikiroot}/locale">
                Require all denied
            </Directory>

            <Directory "${foswikiroot}/tools">
                Require all denied
            </Directory>

            <Directory "${foswikiroot}/working">
                Require all denied
            </Directory>

            # We set an environment variable called blockAccess.
            #
            # Setting a BrowserMatchNoCase to ^$ is important. It prevents Foswiki from
            # including its own topics as URLs and also prevents other Foswikis from
            # doing the same. This is important to prevent the most obvious
            # Denial of Service attacks.
            #
            # You can expand this by adding more BrowserMatchNoCase statements to
            # block evil browser agents trying to crawl your Foswiki
            #
            # Example:
            # BrowserMatchNoCase ^SiteSucker blockAccess
            # BrowserMatchNoCase ^$ blockAccess

            BrowserMatchNoCase ^$ blockAccess

    - name: 'Activate FosWiki config for apache'
      ansible.builtin.shell:
        cmd: 'a2ensite {{path_to_foswiki_webserver_config_file}}'

    - name: 'Apache - enable some mods'
      community.general.apache2_module:
        state: present
        name: '{{ list_apache_module }}'

    - name: 'install plugin - by FosWiki manual'
      ansible.builtin.shell:
        chdir: '{{main_patch_to_fowiki}}{{path_to_foswiki_engine}}/core'
        cmd: 'perl -T pseudo-install.pl default'
      ignore_errors: yes  #Default intallation plugin - always have some Error, ignore this

    - name: 'Restart Apache 2 service - to applay config file'
      ansible.builtin.service:
        name: '{{web_server_name}}'
        state: reloaded

